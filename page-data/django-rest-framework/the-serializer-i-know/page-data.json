{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/django-rest-framework/the-serializer-i-know/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"8e0e8f52-948d-5d47-a241-05185b775467","excerpt":"역할 DRF 에서 데이터를 JSON 형태로 직렬화(Serialize) 한다. queryset 이나 모델 인스턴스 같은 데이터를 JSON 으로 바꿔준다고 생각하면 된다. 특징 Django 의 ModelForm 과 유사하다 전달 받은 데이터의 유효성을 검사하고 형변환 할수 있다. Form…","html":"<h2>역할</h2>\n<p>DRF 에서 데이터를 JSON 형태로 직렬화(Serialize) 한다.<br>\nqueryset 이나 모델 인스턴스 같은 데이터를 JSON 으로 바꿔준다고 생각하면 된다.</p>\n<h2>특징</h2>\n<p>Django 의 ModelForm 과 유사하다<br>\n전달 받은 데이터의 유효성을 검사하고 형변환 할수 있다.<br>\nForm 은 데이터를 HTML 형태로 변환 하지만 Serialize 는 JSON 문자열로 변환 해준다.</p>\n<h2>serializer custom field</h2>\n<p>drf 를 사용한 API 서버에서 데이터를 조회할 때 기본적으로는 model 에 포함된 데이터만 조회가 가능하다.<br>\n그런데 조회시에 model 에 포함되지 않은 커스텀 데이터를 보고싶다면 어떻게 해야할까??<br>\nSerializer fields 중 <code class=\"language-text\">SerializerMethodField</code> 를 사용하면 된다.</p>\n<p>다음예제 처럼 사용하면 되는데, <code class=\"language-text\">fields</code> 옵션이 <code class=\"language-text\">'__all__'</code> 일 경우 자동으로 포함된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductHistorySerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    business_name <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>SerializerMethodField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    quantity_abs <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>SerializerMethodField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    \r\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\r\n        model <span class=\"token operator\">=</span> ProductHistory\r\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">'__all__'</span>\r\n    \r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_business_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span>business<span class=\"token punctuation\">.</span>name\r\n    \r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_quantity_abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">)</span></code></pre></div>\n<p>나처럼 foreignKey 필드를 조회할 때 해당 모델의 id 가 아닌 다른 필드 값을 같이 조회하고 싶다면 아주 좋은 옵션인것 같다.</p>\n<p><a href=\"https://www.django-rest-framework.org/api-guide/fields/#serializermethodfield\">출처1</a>\r\n<a href=\"https://ssungkang.tistory.com/entry/Django-Serializer-Custom-Field-SerializerMethodField\">출처2</a></p>\n<h2>가공된 데이터를 포함하는 DB Row 생성</h2>\n<p>form 에서 받은 데이터 그대로 저장하는것이 아닌 추가적인 데이터 가공이 필요한 경우 해당 데이터를 serializer 에 담아 같이 저장하도록 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># views.py\r\n\r\nclass MyViewSet(ModelViewSet):\r\n    queryset = ProductHistory.objects.all().order_by('-created_at')\r\n    serializer_class = ProductHistorySerializer\r\n    filter_backends = [DjangoFilterBackend]\r\n    filterset_class = ProductHistoryFilter\r\n    \r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n    \r\n        if serializer.is_valid():\r\n            ...\r\n            데이터 가공\r\n            ...\r\n            \r\n            instance_data = {\r\n                'business': business,\r\n                'quantity': new_quantity,\r\n                'expiry_at': new_expiry,\r\n                'admin': admin\r\n            }\r\n            serializer.save(**instance_data)\r\n            \r\n            return Response(serializer.data, HttpStatus.HTTP_200_OK)\r\n        else:\r\n            return Response('fail')</code></pre></div>\n<p><a href=\"https://show-me-the-money.tistory.com/entry/Django-Rest-Framework-Serializer%EC%97%90-Model-Instance%EB%A5%BC-%EC%9D%B8%EC%9E%90%EA%B0%92%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EB%82%B4%EA%B8%B0\">출처</a></p>\n<h2>DB 업데이트 하기</h2>\n<p>기존 <code class=\"language-text\">create()</code> 에서 사용하던 소스에 serializer 를 생성할 때 모델 인스턴스를 추가 하기만 하면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n        model_instance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>queryset<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>kwargs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'pk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        serializer <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_serializer<span class=\"token punctuation\">(</span>model_instance<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/37021954/django-update-viewset\">출처</a></p>","frontmatter":{"title":"Serializer 에 대하여","date":"March 29, 2022","description":null}},"previous":{"fields":{"slug":"/software-documentation/user-guide/"},"frontmatter":{"title":"사용자 가이드 만들기"}},"next":{"fields":{"slug":"/django/many-to-many-relationships-custom-field/"},"frontmatter":{"title":"django model 의 다대다 관계에서 필드 추가하기"}}},"pageContext":{"id":"8e0e8f52-948d-5d47-a241-05185b775467","previousPostId":"29a3caec-f55b-5494-9db4-91d7f316fb0d","nextPostId":"c4669c95-f4df-594c-b4cf-0c0e826cfa65"}},
    "staticQueryHashes": ["2841359383","3257411868"]}