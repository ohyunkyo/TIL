{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/front-end/npm-and-yarn/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"76bff6e3-8cea-57f7-aac4-9188ad1553b7","excerpt":"npm 이란? npm(node package manager)은 node.js 의 기본 패키지 관리 툴이다. node.js 로 만들어진 모듈을 다운로드 하고 설치해준다. npm 을 사용하지 않으면 필요한 모듈을 개별적으로 다운로드 하고 프로젝트 파일로 옮겨야 한다. redhat…","html":"<h2>npm 이란?</h2>\n<p>npm(node package manager)은 node.js 의 기본 패키지 관리 툴이다.<br>\nnode.js 로 만들어진 모듈을 다운로드 하고 설치해준다.<br>\nnpm 을 사용하지 않으면 필요한 모듈을 개별적으로 다운로드 하고 프로젝트 파일로 옮겨야 한다.</p>\n<blockquote>\n<p>redhat 계열 리눅스의 rpm 과 비슷한 기능을 하는것처럼 느껴진다.</p>\n</blockquote>\n<h3>몇가지 사용 방법</h3>\n<p><code class=\"language-text\">npm init</code> : package.json 파일을 생성한다.<br>\n<code class=\"language-text\">npm install</code> : package.json 파일에 정의된 의존성 모듈을 설치한다.<br>\n<code class=\"language-text\">npm cache clean --force</code> : npm 의 캐시를 모두 삭제한다.</p>\n<h3>package.json</h3>\n<p>프로젝트에 대한 정보와 의존성을 정의한 파일이다.<br>\n해당 프로젝트가 어느곳에서든지 원활히 실행될 수 있도록 개발 환경을 구축할 수 있도록 도와준다.</p>\n<h2>yarn 이란?</h2>\n<p>yarn 은 npm 의 단점을 보완하기 위해 만들어진 툴이다.\r\n더 빠르고 안정적이라고 한다.</p>\n<blockquote>\n<p>캐시를 통해 한번 다운로드한 파일은 다시 다운로드 하지 않는다는데 동일한 패키지에서만 캐시를 사용하는지 궁금하다</p>\n</blockquote>\n<h2>어떤것을 선택해야 할까</h2>\n<p>일단 npm 을 사용해보고 yarn 의 필요성을 느끼게 되었을때 넘어가는게 자연스러운 흐름이라는 생각이 든다.<br>\n써보지도 않은것의 단점을 느낄순 없으니 앞으로 프로젝트 진행하면서 알아가봐야겠다.</p>","frontmatter":{"title":"npm 과 yarn. 정의하고 선택해보기.","date":"March 17, 2022","description":null}},"previous":{"fields":{"slug":"/django/generate-requirement-file/"},"frontmatter":{"title":"requirements 파일 생성하기"}},"next":{"fields":{"slug":"/IDE/the-pycharm-i-know/"},"frontmatter":{"title":"내가 사용하는 pycharm"}}},"pageContext":{"id":"76bff6e3-8cea-57f7-aac4-9188ad1553b7","previousPostId":"35c4653b-ea9f-5cbf-8814-0467860c3657","nextPostId":"f4cc7253-0b97-5155-9209-e1af08391e32"}},
    "staticQueryHashes": ["2841359383","3257411868"]}