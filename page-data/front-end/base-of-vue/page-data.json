{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/front-end/base-of-vue/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"1756ce05-bdd7-5a2c-8af8-c2faa22b3256","excerpt":"개요 백엔드 개발자로서 구매한 템플릿을 변경하는데 필요한 부분만 간단히 정리. 라우팅 특정 URL 에 특정 컴포넌트를 라우팅 시킨다. URL 의 경로와 이름을 지정한다. 백엔드와 통신하기 HTTP 통신 라이브러리인 axios 를 사용한다. 백엔드 API…","html":"<h2>개요</h2>\n<p>백엔드 개발자로서 구매한 템플릿을 변경하는데 필요한 부분만 간단히 정리.</p>\n<h2>라우팅</h2>\n<p>특정 URL 에 특정 컴포넌트를 라우팅 시킨다.<br>\nURL 의 경로와 이름을 지정한다.</p>\n<h2>백엔드와 통신하기</h2>\n<p>HTTP 통신 라이브러리인 axios 를 사용한다.<br>\n백엔드 API 엔드포인트로 요청한 뒤 결과 데이터를 사용 할 수 있다.</p>\n<h2>받아온 데이터 페이지에 전달하기</h2>\n<p>url 의 데이터를 받아 business_list 에 전달했다.<br>\ndata 에서 return 하는것은 vue 문법인것같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;script&gt;\r\n    import axios from &quot;axios&quot;;\r\n    let url = &quot;http://localhost:8000/api/business&quot;;\r\n    export default {\r\n      data () {\r\n        return {\r\n          business_list: []\r\n        }\r\n      },\r\n      mounted() {\r\n        axios({\r\n          method: &quot;GET&quot;,\r\n          url: url\r\n        })\r\n        .then(response =&gt; {\r\n            this.business_list = response.data;\r\n          })\r\n          .catch(response =&gt; {\r\n            console.log(&quot;실패!!&quot;, response);\r\n          });\r\n    \r\n      }\r\n    }\r\n&lt;/script&gt;</code></pre></div>\n<h2>유효성 검사하기</h2>\n<p>validation 모듈을 사용하여 유효성검사가 가능하다.<br>\n유효성 검사를 통과했을 때 데이터를 전송한다.<br>\nfront 의 유효성 검사이기 때문에 무조건 믿지 말고 back 에서도 해야할것 같다.</p>\n<h2>태그에서 변수 사용하기</h2>\n<p>다음 예제처럼 <code class=\"language-text\">title</code> 이 아닌 <code class=\"language-text\">:title</code> 을 사용하면 value 에 변수를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;base-page-heading :title=&quot;name&quot;&gt;\r\n&lt;/base-page-heading&gt;</code></pre></div>\n<h2>특정 라우터로 이동 가능한 버튼</h2>\n<p><code class=\"language-text\">router-link</code> 태그를 사용하면 특정 라우터에 인자를 전달하여 이동시킬 수 있다.<br>\n공식 문서를 참고했는데도 warning 이 발생하여 더 알아봐야 할것같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;b-button variant=&quot;info&quot; size=&quot;lg&quot; router-link :to=&quot;{name: &#39;business update&#39;, params: {id: id}}&quot;&gt;수정하기&lt;/b-button&gt;</code></pre></div>\n<h2>수정시 form 에 기존 데이터 넣기</h2>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;script&gt;\r\n    ...\r\n    mounted() {\r\n    axios({\r\n    method: &quot;GET&quot;,\r\n    url: url+this.$route.params.id\r\n    })\r\n    .then(response =&gt; {\r\n    console.log(response.data);\r\n    this.form.id = response.data.id;\r\n    this.form.name = response.data.name;\r\n    this.form.description = response.data.description;\r\n    })\r\n    .catch(response =&gt; {\r\n    console.log(&quot;실패!!&quot;, response);\r\n    });\r\n    },\r\n    ...\r\n&lt;/script&gt;</code></pre></div>\n<h2>PATCH 요청시 유의할점</h2>\n<p>URL 의 가장 뒤에 <code class=\"language-text\">/</code> 를 넣어줘야한다. 모든 요청시 이런식으로 해야하는지는 잘 모르겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;script&gt;\r\n    ...\r\n    url: url+this.$route.params.id+&quot;/&quot;,\r\n    ...\r\n&lt;/script&gt;</code></pre></div>","frontmatter":{"title":"vue.js 기초 사용법","date":"March 21, 2022","description":null}},"previous":{"fields":{"slug":"/front-end/the-vue-js-i-know/"},"frontmatter":{"title":"내가 이해한 vue.js"}},"next":{"fields":{"slug":"/DevOps/redhat-openshift/"},"frontmatter":{"title":"레드햇 오픈시프트"}}},"pageContext":{"id":"1756ce05-bdd7-5a2c-8af8-c2faa22b3256","previousPostId":"facef1bd-a4f6-5bc5-9ec5-418667e9deea","nextPostId":"175867fd-6ef2-5de2-ad58-f81b131dc7d0"}},
    "staticQueryHashes": ["2841359383","3257411868"]}