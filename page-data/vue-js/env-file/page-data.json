{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/vue-js/env-file/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"4b5486ad-8827-5e7d-bcbb-ac0dce3cbcae","excerpt":"0. 서론 기존에 API 엔드포인트의 주소를 각 컴포넌트(vue파일)에 명시했었는데, axios 를 모듈화 하기위해선 해당 URL 을 개별적으로 관리할 필요가 있다고 느꼈다. 1. .env 파일이란? vue…","html":"<h2>0. 서론</h2>\n<p>기존에 API 엔드포인트의 주소를 각 컴포넌트(vue파일)에 명시했었는데, axios 를 모듈화 하기위해선 해당 URL 을 개별적으로 관리할 필요가 있다고 느꼈다.</p>\n<h2>1. .env 파일이란?</h2>\n<p>vue 의 환경변수 파일은 여러개로 나뉠 수 있다.</p>\n<p>개발환경(<code class=\"language-text\">npm run serve</code>)에서는 <code class=\"language-text\">.env.development</code> 파일을 자동으로 인식한다.<br>\n그렇기 때문에 개발환경에서 필요한 변수를 선언해주면 된다.<br>\n또한 <code class=\"language-text\">.gitignore</code> 파일에 등록하여 깃에 같이 업로드 되지 않도록 해야한다.</p>\n<p><code class=\"language-text\">.env.production</code> 파일은 배포버전에서 자동으로 인식한다.(어떻게 인식하는지 잘 모르겠음)<br>\n실제 운영시 필요한 변수를 선언 하면 될것같다.</p>\n<p>그리고 그냥 <code class=\"language-text\">.env</code> 파일은 <code class=\"language-text\">.env.development</code> 과 <code class=\"language-text\">.env.production</code> 모두에서 인식하기 때문에 공통적으로 필요한 변수를 선언하면 된다.</p>\n<p><a href=\"https://hjcode.tistory.com/96\">출처</a></p>\n<h2>2. .env 파일 생성하기</h2>\n<p>위의 환경변수 파일들은 모두 루트 디렉토리에 생성해야 한다.<br>\n<code class=\"language-text\">.gitignore</code> 파일이나 <code class=\"language-text\">package.json</code> 파일이 있는 그 위치에.</p>\n<p><a href=\"https://crispypotato.tistory.com/52\">출처</a></p>\n<h2>3. 변수 선언하기</h2>\n<p>다음과 같이 <code class=\"language-text\">VUE_APP_</code> 라는 접두어가 붙은 변수들은 자동으로 로딩된다.<br>\nvue2 에선 따로 로딩해줬어야 한다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">VUE_APP_NUM=10\r\nVUE_APP_STR=hi</code></pre></div>\n<p>나는 다음과 같이 개발서버 URL 을 설정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># .env.development\r\n\r\nVUE_APP_API_URL = http://localhost:8000/</code></pre></div>\n<p><a href=\"https://kang-ji.tistory.com/241\">출처1</a>\r\n<a href=\"https://joshua1988.github.io/vue-camp/deploy/env-setup.html#env-%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%AF\">출처2</a></p>\n<h2>4. 환경변수 사용하기</h2>\n<p>다음과 같은 방법으로 사용할 수 있다.<br>\n위에서도 다뤘듯 별도의 로딩 과정 없이 바로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># src<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>js\r\n\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">createInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">VUE_APP_API_URL</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">createInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"env 파일 사용하기","date":"April 22, 2022","description":null}},"previous":{"fields":{"slug":"/django/rename-column-name/"},"frontmatter":{"title":"django orm 에서 column name 변경하여 리턴하기"}},"next":{"fields":{"slug":"/vue-js/axios-modularization/"},"frontmatter":{"title":"axios 모듈화 하기"}}},"pageContext":{"id":"4b5486ad-8827-5e7d-bcbb-ac0dce3cbcae","previousPostId":"b74a755f-9e39-5309-9e9a-93d337fadea0","nextPostId":"3bda045d-bcae-5a38-807e-22eabcfc13f8"}},
    "staticQueryHashes": ["2841359383","3257411868"]}