{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/vue-js/file-download-from-response/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"82d9b456-2a3e-5083-bbed-eecb4c1632f3","excerpt":"0. 서론 엑셀 파일이 포함된 HTTP Response 를 리턴하도록 만든 뷰가 있다. 브라우저로 API…","html":"<h2>0. 서론</h2>\n<p>엑셀 파일이 포함된 HTTP Response 를 리턴하도록 만든 뷰가 있다.<br>\n브라우저로 API 엔드포인트에 접속하여 테스트 했을때 엑셀 파일이 정상적으로 다운로드 되었다.<br>\n이제 프론트엔드에서 이 엔드포인트로 요청을 전달하여 엑셀 파일을 받아오기만 하면 된다.<br>\n그러나 응답 결과는 엑셀 파일이 아니라 JSON 이였다.</p>\n<p>원인 파악을 위해 여러 자료를 찾아보다 주변의 도움을 받고 문제를 해결했다.</p>\n<h2>1. 기존 소스코드</h2>\n<p>엑셀이 포함된 HTTP Response 를 리턴하는 뷰</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># purchase_order_api.view</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PurchaseOrderDownloadAPI</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n        response <span class=\"token operator\">=</span> HttpResponse<span class=\"token punctuation\">(</span>headers<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/vnd.ms-excel'</span><span class=\"token punctuation\">,</span>\r\n            <span class=\"token string\">'Content-Disposition'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'attachment; filename*=UTF-8\\'\\'purchase_order_'</span> <span class=\"token operator\">+</span> date_string <span class=\"token operator\">+</span> <span class=\"token string\">'.xls'</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n\r\n        df<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> engine<span class=\"token operator\">=</span><span class=\"token string\">'xlwt'</span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token keyword\">return</span> response</code></pre></div>\n<p>해당 뷰의 엔드포인트에 요청 후 응답을 받아 리턴하는 소스</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># purchase_order<span class=\"token punctuation\">.</span>js\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">downloadPurchaseOrder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dateString</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>\r\n        <span class=\"token string\">'api/purchase_order_download/'</span> <span class=\"token operator\">+</span> dateString <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\r\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'발주서 다운로드가 완료되었습니다.'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>data\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 발생\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2. 해결하기</h2>\n<p>아래의 소스를 받고 나의 프로젝트에 적용하여 일단 기능을 구현했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># purchase_order<span class=\"token punctuation\">.</span>js\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">downloadPurchaseOrder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dateString</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'api/purchase_order_download/'</span> <span class=\"token operator\">+</span> dateString <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">responseType</span><span class=\"token operator\">:</span> <span class=\"token string\">'blob'</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\r\n        link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>\r\n            <span class=\"token string\">\"download\"</span><span class=\"token punctuation\">,</span>\r\n            <span class=\"token string\">'발주서_'</span><span class=\"token operator\">+</span>dateString\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        link<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\r\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'발주서 다운로드가 완료되었습니다.'</span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span>currentRoute<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 발생\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>3. 항목별 설명</h2>\n<h3>3.1 responseType 설정</h3>\n<p>axios 응답으로 받아오는 데이터 형식의 default 값은 <code class=\"language-text\">json</code> 이다.<br>\n그러나 자바스크립트에서 텍스트가 아닌 대용량 데이터를 주고받을때에는 <code class=\"language-text\">blob</code> 이라는 객체를 사용해야 한다고 한다.<br>\n그렇기 때문에 일단 응답 형식을 <code class=\"language-text\">blob</code> 으로 설정한다.</p>\n<p><a href=\"https://sambalim.tistory.com/94\">출처</a></p>\n<h3>3.2 blob 객체의 엑셀 데이터를 다운로드 하기</h3>\n<p>axios 가 받아온 <code class=\"language-text\">blob</code> 형태의 response 에는 http header, footer 등 필요하지 않는 데이터가 있기 때문에 바이너리 데이터만을 사용한다.</p>\n<p>이 바이너리 데이터로 URL 을 만들고 브라우저의 클릭 이벤트를 발생시켜 해당 URL 을 클릭하게 되면 파일이 다운로드 된다.<br>\n이렇게 하지 않으면 보안상 이슈로 브라우저가 다운로드를 막는다고 한다.</p>","frontmatter":{"title":"http response 의 파일을 다운로드 하기","date":"April 27, 2022","description":null}},"previous":{"fields":{"slug":"/vue-js/axios-modularization/"},"frontmatter":{"title":"axios 모듈화 하기"}},"next":{"fields":{"slug":"/gatsby/gatsby-plugin-image/"},"frontmatter":{"title":"개츠비 이미지 플러그인 적용"}}},"pageContext":{"id":"82d9b456-2a3e-5083-bbed-eecb4c1632f3","previousPostId":"3bda045d-bcae-5a38-807e-22eabcfc13f8","nextPostId":"7cb0b682-7612-597a-8600-8b33db2abcfd"}},
    "staticQueryHashes": ["2841359383","3257411868"]}