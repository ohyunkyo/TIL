{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/devops/redhat-openshift/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"9dc0a023-7266-5fb4-a114-64714d9661b5","excerpt":"0. 서론 레드햇 개발자포럼 웨비나에서 알게된 레드햇 오픈시프트에 대해 간단하게 정리해봤다. 웨비나에서는 오픈시프트의 각 기능을 사용하는 방법에 대해 강의했는데, 나는 CI/CD…","html":"<h2>0. 서론</h2>\n<p>레드햇 개발자포럼 웨비나에서 알게된 레드햇 오픈시프트에 대해 간단하게 정리해봤다.<br>\n웨비나에서는 오픈시프트의 각 기능을 사용하는 방법에 대해 강의했는데,<br>\n나는 CI/CD 에 대해 잘 알지 못해서 사용 방법 보다는 어떤 역할을 하는지에 대해서만 웨비나 내용을 기반으로 따로 알아보고 정리했다.</p>\n<h2>1. 레드햇은 실습 가능한 환경을 제공한다.</h2>\n<p><a href=\"https://developers.redhat.com/\">레드햇 개발자 페이지</a> 에서 간단하게 테스트 가능한 환경을 제공해준다.<br>\n단순히 교육을 듣고 이해하는것을 넘어, 복잡한 환경 구축 없이도 바로 실습 가능한것이 장점이라고 느꼈다.<br>\n오픈시프트가 아닌 다른 항목도 실습 가능한 부분이 있다.</p>\n<h2>2. 오픈시프트란 무엇인가</h2>\n<p>오픈시프트는 쿠버네티스 환경을 실행할 수 있도록 쿠버네티스에 추가된 소프트웨어 컬렉션이라고 한다.<br>\n쿠버네티스에서 하던 작업을 더 쉽게 수행 가능하도록 도와준다는 것이다.</p>\n<p>개발자는 어플리케이션 수정사항을 깃허브에 푸쉬 하기만 하면 자동으로 어플리케이션이 배포된다.<br>\n만약 다른 수정사항을 반영하여 다시 푸쉬 한다면 중단없이 수정된 버전이 다시 배포된다.</p>\n<p>운영 엔지니어는 웹 콘솔을 통해 더욱 편리하게 어플리케이션과 인프라를 관리한다.<br>\n또한 호스트를 확장하고 클러스터에 추가하는 과정을 자동화할 수 있다.</p>\n<p><a href=\"https://youtu.be/xEofcsd6HGg\">출처1</a>,\r\n<a href=\"https://youtu.be/KTN_QBuDplo\">출처2</a></p>\n<h2>3. 어플리케이션 모니터링 하기</h2>\n<p>쿠버네티스에서 컨테이너가 잘 작동하는지 확인해야 자동화 관리를 할 수 있다고 한다.</p>\n<p>오픈시프트는 컨테이너의 상태를 확인할 수 있도록 API 엔드포인트를 제공한다.<br>\n굉장히 많은 종류의 상태를 확인할 수 있는데, 쿠버네티스에서는 전체 상태를 확인하기 힘들었다고 한다.</p>\n<p><a href=\"https://developers.redhat.com/courses/spring-boot/monitoring-applications\">실습 URL</a></p>\n<h2>4. 오픈시프트 파이프라인</h2>\n<p>오픈시프트 파이프라인은 쿠버네티스 기반의 클라우드 네이티브 CI/CD 솔루션이다.<br>\nTekton 을 사용하여 여러 플랫폼에서 배포를 자동화 한다.</p>\n<p><a href=\"https://access.redhat.com/documentation/ko-kr/openshift_container_platform/4.6/html/pipelines/understanding-openshift-pipelines\">출처</a>,\r\n<a href=\"https://developers.redhat.com/courses/gitops/getting-started-openshift-pipelines\">실습 URL</a></p>\n<h2>5. 오픈시프트 깃옵스</h2>\n<p>ArgoCD 를 기반으로 제작된 오픈시프트 깃옵스는 깃에 저장된 설정을 쿠버네티스 환경에 배포하고 환경을 유지하도록 지원한다.</p>\n<p>한마디로 쿠버네티스의 리소스를 코드를 통해 원하는 상태로 유지한다는것이다.<br>\n설정이 담긴 코드를 수정 후 깃에 푸쉬 하면 자동으로 해당 설정이 변화한것을 감지하고 환경을 다시 설정한다고 한다.</p>\n<h2>6. 휴먼에러</h2>\n<p>실행 방법이 코드로 정의되면 휴먼에러를 줄일 수 있다.</p>\n<h2>99. 끝나고 나서</h2>\n<p>CI/CD 에 대한 개념이 잘 잡혀있지 않다보니 웨비나에 참여하면서 각 기능의 특장점에 집중하지 못했고 기본적인 수행 기능만 알게 되는것으로 끝났다.<br>\n그리고 각 기능에 대한 이해가 없다보니 설명도 많이 부족하다.</p>\n<p>재고관리 웹 front/back 분리가 완료되고 나면 CI/CD 에 대해서 공부할 예정인데, 그 이후에 다시 이 문서를 더 보완 할 수 있으면 좋을것 같다.</p>","frontmatter":{"title":"레드햇 오픈시프트","date":"March 22, 2022","description":null}},"previous":{"fields":{"slug":"/vue-js/base-of-vue/"},"frontmatter":{"title":"vue.js 기초 사용법"}},"next":{"fields":{"slug":"/django-rest-framework/django-filter/"},"frontmatter":{"title":"django-filter 라이브러리 사용법"}}},"pageContext":{"id":"9dc0a023-7266-5fb4-a114-64714d9661b5","previousPostId":"a053a6fb-dbf4-59c0-9142-21c77f067ed1","nextPostId":"6f5ee300-3ef5-5485-bd52-b41b62aa6527"}},
    "staticQueryHashes": ["2841359383","3257411868"]}