{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/django/tht-django-pandas-i-know/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"47f88826-f242-5ddb-8765-6125a4f794ae","excerpt":"pandas 란? pandas 는 데이터 조작 및 분석을 위해 python 으로 작성된 소프트웨어 라이브러리이다. 또한 R, SQL, spreadsheet 등 에서 가능하던 작업을 pandas 에서 수행 가능하도록 하는 메서드를 가지고 있다. 출처 django-pandas…","html":"<h2>pandas 란?</h2>\n<p>pandas 는 데이터 조작 및 분석을 위해 python 으로 작성된 소프트웨어 라이브러리이다.<br>\n또한 R, SQL, spreadsheet 등 에서 가능하던 작업을 pandas 에서 수행 가능하도록 하는 메서드를 가지고 있다.</p>\n<p><a href=\"https://pandas.pydata.org/docs/getting_started/comparison/index.html\">출처</a></p>\n<h2>django-pandas 사용하기</h2>\n<p>이런 pandas 를 django 프로젝트에서 사용 가능하도록 도와주는 도구가 django-pandas 이다.</p>\n<h3>설치하기</h3>\n<p>django-pandas 를 사용하기 전에 pandas 를 설치해야 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> numpy\r\npip <span class=\"token function\">install</span> pandas</code></pre></div>\n<p>이제 django-pandas 를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> django-pandas</code></pre></div>\n<h3>queryset 으로 dataframe 생성하기</h3>\n<p><code class=\"language-text\">read_frame()</code> 메서드를 사용하면 간단하게 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django_pandas<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_frame\r\nqs <span class=\"token operator\">=</span> InventoryProcess<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf <span class=\"token operator\">=</span> read_frame<span class=\"token punctuation\">(</span>qs<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 결과 </span>\r\n\r\n   <span class=\"token function\">id</span>     name  effect\r\n<span class=\"token number\">0</span>   <span class=\"token number\">3</span>  초기재고    True\r\n<span class=\"token number\">1</span>   <span class=\"token number\">4</span>    반품    True\r\n<span class=\"token number\">2</span>   <span class=\"token number\">5</span>    출고   False\r\n<span class=\"token number\">3</span>   <span class=\"token number\">6</span>    입고    True</code></pre></div>\n<p>이제 이 데이터 프레임의 양식을 변경해보자</p>\n<h3>column 순서 변경하기</h3>\n<p>dataframe 에 원하는 순서대로 컬럼 명을 나열한 리스트를 전달하면 해당 순서대로 컬럼의 위치가 변경된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django_pandas<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_frame\r\nqs <span class=\"token operator\">=</span> InventoryProcess<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf <span class=\"token operator\">=</span> read_frame<span class=\"token punctuation\">(</span>qs<span class=\"token punctuation\">)</span>\r\n\r\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'effect'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 추가한 코드</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 결과 </span>\r\n\r\n     name  effect  <span class=\"token function\">id</span>\r\n<span class=\"token number\">0</span>  초기재고    True   <span class=\"token number\">3</span>\r\n<span class=\"token number\">1</span>    반품    True   <span class=\"token number\">4</span>\r\n<span class=\"token number\">2</span>    출고   False   <span class=\"token number\">5</span>\r\n<span class=\"token number\">3</span>    입고    True   <span class=\"token number\">6</span></code></pre></div>\n<h3>컬럼 명 변경하기 - 전체</h3>\n<p><code class=\"language-text\">columns</code> 속성을 사용하여 사용하여 dataframe 의 컬럼 이름을 변경한다.<br>\n아래의 방법으로는 모든 컬럼의 이름을 변경하기 때문에 실제 컬럼 갯수와 리스트의 요소 갯수가 일치해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django_pandas<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_frame\r\nqs <span class=\"token operator\">=</span> InventoryProcess<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf <span class=\"token operator\">=</span> read_frame<span class=\"token punctuation\">(</span>qs<span class=\"token punctuation\">)</span>\r\n\r\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'effect'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\ndf<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'처리방법'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 추가한 코드</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 결과 </span>\r\n\r\n     이름   처리방법  <span class=\"token function\">id</span>\r\n<span class=\"token number\">0</span>  초기재고   True   <span class=\"token number\">3</span>\r\n<span class=\"token number\">1</span>    반품   True   <span class=\"token number\">4</span>\r\n<span class=\"token number\">2</span>    출고  False   <span class=\"token number\">5</span>\r\n<span class=\"token number\">3</span>    입고   True   <span class=\"token number\">6</span></code></pre></div>\n<h3>컬럼명 변경하기 - 개별</h3>\n<p>전체 컬럼명이 아닌 일부만 변경하고 싶을 경우 <code class=\"language-text\">rename()</code> 메서드에 기존컬럼 이름과 변경할 컬럼 이름을 전달한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django_pandas<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_frame\r\nqs <span class=\"token operator\">=</span> InventoryProcess<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf <span class=\"token operator\">=</span> read_frame<span class=\"token punctuation\">(</span>qs<span class=\"token punctuation\">)</span>\r\n\r\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'effect'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\ndf<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'처리방법'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span>\r\ndf<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pk'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 추가한 코드</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 결과 </span>\r\n\r\n     이름   처리방법  pk\r\n<span class=\"token number\">0</span>  초기재고   True   <span class=\"token number\">3</span>\r\n<span class=\"token number\">1</span>    반품   True   <span class=\"token number\">4</span>\r\n<span class=\"token number\">2</span>    출고  False   <span class=\"token number\">5</span>\r\n<span class=\"token number\">3</span>    입고   True   <span class=\"token number\">6</span></code></pre></div>\n<h3>인덱스 제거하여 출력하기</h3>\n<p><code class=\"language-text\">to_string()</code> 메서드의 인수에 <code class=\"language-text\">index=False</code> 를 전달하여 인덱스가 표시되지 않도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django_pandas<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> read_frame\r\nqs <span class=\"token operator\">=</span> InventoryProcess<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf <span class=\"token operator\">=</span> read_frame<span class=\"token punctuation\">(</span>qs<span class=\"token punctuation\">)</span>\r\n\r\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'effect'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\ndf<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'처리방법'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span>\r\ndf<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pk'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> \r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>to_string<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 변경한 코드</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 결과 </span>\r\n\r\n이름  처리방법  pk\r\n초기재고  True   <span class=\"token number\">3</span>\r\n반품  True   <span class=\"token number\">4</span>\r\n출고 False   <span class=\"token number\">5</span>\r\n입고  True   <span class=\"token number\">6</span></code></pre></div>\n<p><a href=\"https://seong6496.tistory.com/133\">출처1</a>\r\n<a href=\"https://hogni.tistory.com/51\">출처2</a>\r\n<a href=\"https://github.com/chrisdev/django-pandas\">django-pandas github</a></p>","frontmatter":{"title":"내가 사용해본 django-pandas","date":"April 13, 2022","description":null},"fields":{"category":"django","slug":"/django/tht-django-pandas-i-know/"}},"previous":{"fields":{"slug":"/django-rest-framework/json-to-dataframe/"},"frontmatter":{"title":"json 데이터를 dataframe 으로 변환하기"}},"next":{"fields":{"slug":"/django-rest-framework/create-xls-file-and-return-it/"},"frontmatter":{"title":"엑셀 파일 HttpResponse 에 담아 전달하기"}}},"pageContext":{"id":"47f88826-f242-5ddb-8765-6125a4f794ae","previousPostId":"2a7bb4a7-c3cb-5c9d-abc9-d6695ae88505","nextPostId":"167c3a17-c621-5fbb-ad14-8e71837c309f"}},
    "staticQueryHashes": ["230163734","2841359383","3496359572"]}